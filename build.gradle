buildscript {
	ext {
		springBootVersion = '1.5.1.RELEASE'
	}
	repositories {
		maven {
			url "http://nexus-cicd.192.168.252.210.xip.io/content/repositories/central/"
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("com.maxxton:microdocs-crawler-gradle:1.+")
		classpath("com.netflix.nebula:nebula-release-plugin:4.0.1")
		classpath("com.netflix.nebula:gradle-dependency-lock-plugin:4.3.0")
		classpath("com.netflix.nebula:gradle-extra-configurations-plugin:3.1.0")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'microdocs'
apply plugin: "nebula.nebula-release"
apply plugin: "nebula.dependency-lock"

jar {
	baseName = 'order-service'
	version = ''
}

sourceCompatibility = 1.8
group = 'com.example'

repositories {
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
}


dependencies {
	compile('org.springframework.cloud:spring-cloud-starter-feign')
	compile('org.springframework.cloud:spring-cloud-starter-ribbon')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('io.fabric8:spring-cloud-starter-kubernetes-all:0.1.4')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:Dalston.BUILD-SNAPSHOT"
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			groupId "com.maxxton.microservices"
			artifactId "${application_name}"
			from components.java
		}
	}
	repositories {
		maven {
			credentials {
				username "microservices"
				password "M1cr053rv1c35!"
			}
			if (project.version.toString().endsWith("-SNAPSHOT")) {
				url "http://mxt-maven01.newyse.maxxton/repository/snapshots"
			} else {
				url "http://mxt-maven01.newyse.maxxton/repository/internal"
			}
		}
	}
}
